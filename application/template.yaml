AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Description: >-
  Creates API Gateway and sets up a dynamodb

Parameters:
  Stage:
    Type: String
    Default: prod

Resources:
  SirnasTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: sirnas
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: transcript_id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: 'NEW_AND_OLD_IMAGES'
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: TranscriptIdIndex
          KeySchema:
          - AttributeName: transcript_id
            KeyType: HASH
          Projection:
            ProjectionType: KEYS_ONLY

  APIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: APIPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:PutItem'
                  - 'dynamodb:UpdateItem'
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:GetItem'
                  - 'dynamodb:Scan'
                  - 'dynamodb:Query'
                Resource: '*'

  ApiGwAccountConfig:
    Type: 'AWS::ApiGateway::Account'
    Properties:
      CloudWatchRoleArn: !GetAtt 'ApiGatewayLoggingRole.Arn'

  ApiGatewayLoggingRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'apigateway.amazonaws.com'
            Action: 'sts:AssumeRole'
      Path: '/'
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs'

  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      OpenApiVersion: 3.0.2
      MethodSettings:
        - LoggingLevel: INFO # ERROR/INFO level logging
          ResourcePath: '/*' # allows for logging on any resource
          HttpMethod: '*' # allows for logging on any method
          DataTraceEnabled: true # enabling Log full requests/responses data in console
          MetricsEnabled: true # Enable detailed metrics (error 404, latence, ...)
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: openapi.yaml

Outputs:
  Url:
    Description: Endpoint URL
    Value: !Sub https://${Api}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
